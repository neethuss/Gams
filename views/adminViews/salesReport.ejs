<%- include('nav') -%>

<div class="container-fluid py-4" style="font-family: auto;">
  <div class="row">
    <div class="col-12">
      <div class="card my-4">
        <div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2">
          <div class="bg-gradient-danger shadow-primary border-radius-lg pt-4 pb-3">
            <h6 class="text-white text-capitalize ps-3">Sales Report</h6>
          </div>
        </div>

        <div class="card-body px-4 pb-2">
          <!-- Report Filter Options -->
          <div class="row mb-4">
            <div class="col-md-8">
              <div class="card">
                <div class="card-body">
                  <h6 class="mb-3">Filter Reports</h6>

                  <!-- Quick Filter Buttons -->
                  <div class="mb-3">
                    <div class="btn-group" role="group" aria-label="Report period">
                      <a href="/admin/salesReport?reportType=daily"
                        class="btn btn-sm btn-outline-primary <%= reportType === 'daily' ? 'active' : '' %>">Daily</a>
                      <a href="/admin/salesReport?reportType=weekly"
                        class="btn btn-sm btn-outline-primary <%= reportType === 'weekly' ? 'active' : '' %>">Weekly</a>
                      <a href="/admin/salesReport?reportType=monthly"
                        class="btn btn-sm btn-outline-primary <%= reportType === 'monthly' ? 'active' : '' %>">Monthly</a>
                      <a href="/admin/salesReport" class="btn btn-sm btn-outline-secondary">Reset</a>
                    </div>
                  </div>

                  <!-- Custom Date Range Filter -->
                  <form action='/admin/salesReport' method='get' class="row g-3 align-items-end">
                    <div class="col-sm-4">
                      <label for="startDate" class="form-label">Start Date:</label>
                      <input type="date" id="startDate" name="startDate" value="<%= startDate || '' %>"
                        class="form-control">
                    </div>
                    <div class="col-sm-4">
                      <label for="endDate" class="form-label">End Date:</label>
                      <input type="date" id="endDate" name="endDate" value="<%= endDate || '' %>"
                        class="form-control">
                    </div>
                    <div class="col-sm-4">
                      <button type="submit" class="btn btn-primary mb-0">Apply Filter</button>
                    </div>
                  </form>
                </div>
              </div>
            </div>

            <div class="col-md-4">
              <div class="card">
                <div class="card-body">
                  <h6 class="mb-3">Export Report</h6>
                  <div class="d-flex gap-2">
                    <a href="/admin/generatePdf<%= exportQueryParams %>" class="btn btn-danger mb-0">
                      <i class="material-icons opacity-10">picture_as_pdf</i> Export PDF
                    </a>
                    <a href="/admin/generateExcel<%= exportQueryParams %>" class="btn btn-success mb-0">
                      <i class="material-icons opacity-10">table_view</i> Export Excel
                    </a>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <!-- Report Summary -->
          <div class="row mb-4">
            <div class="col-md-12">
              <div class="card bg-light">
                <div class="card-body">
                  <div class="row">
                    <div class="col-md-4">
                      <h6 class="text-muted">Report Period</h6>
                      <p class="mb-0"><strong>
                          <%= reportPeriodText %>
                        </strong></p>
                    </div>
                    <div class="col-md-4">
                      <h6 class="text-muted">Total Orders</h6>
                      <p class="mb-0"><strong>
                          <%= totalOrders %>
                        </strong></p>
                    </div>
                    <div class="col-md-4">
                      <h6 class="text-muted">Total Revenue</h6>
                      <p class="mb-0"><strong>â‚¹<%= totalRevenue.toFixed(2) %></strong></p>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <!-- Orders Table -->
          <div class="table-responsive">
            <table id="salesReportTable" class="table align-items-center mb-0">
              <thead>
                <tr>
                  <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Order #</th>
                  <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Name</th>
                  <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Address</th>
                  <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Product</th>
                  <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Quantity</th>
                  <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Total Price</th>
                  <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Discount</th>
                  <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Total</th>
                  <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Purchase Date</th>
                  <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Status</th>
                </tr>
              </thead>
              <tbody>
                <% if (orders.length===0) { %>
                  <tr>
                    <td colspan="10" class="text-center py-4">No orders found for the selected period</td>
                  </tr>
                  <% } else { %>
                    <% orders.forEach((order, i)=> { %>
                      <tr>
                        <td>
                          <%= (page - 1) * perPage + i + 1 %>
                        </td>
                        <td>
                          <%= order.userId.username %>
                        </td>
                        <% const addres=order.shippingAddress %>
                          <% if(addres) { %>
                            <td>
                              <%= addres.address %>, <br>
                                <%= addres.district %>
                                  <%= addres.state %>
                                    <%= addres.country %>,
                                      <%= addres.pincode %> <br>
                                        <%= addres.phone %>
                            </td>
                            <td>
                              <% order.products.forEach((product)=> { %>
                                <%= product.product.product_name %><br>
                                  <% }); %>
                            </td>
                            <td>
                              <% order.products.forEach((product)=> { %>
                                <%= product.quantity %><br>
                                  <% }); %>
                            </td>
                            <td>
                              <% order.products.forEach((product)=> { %>
                                <%= product.totalPrice %><br>
                                  <% }); %>
                            </td>
                            <td>
                              <%= order.discountAmount %>
                            </td>
                            <td>
                              <%= order.payTotal %>
                            </td>
                            <td>
                              <%= order.orderDate.toLocaleDateString() %>
                            </td>
                            <td>
                              <%= order.status %>
                            </td>
                            <% } %>
                      </tr>
                      <% }) %>
                        <% } %>
              </tbody>
            </table>
          </div>

          <!-- Pagination -->
          <% if (totalPages > 1) { %>
            <div class="pagination" style="display: flex; align-items: center; justify-content: center;">
              <nav aria-label="Page navigation" class="pagination-container" style="margin-top: 30px;">
                <ul class="pagination justify-content-center">
                  <li class="page-item <%= page == 1 ? 'disabled' : '' %>">
                    <a class="page-link" href="?<%= paginationQueryString %>&page=<%= page - 1 %>"
                      aria-label="Previous">
                      <span aria-hidden="true">&laquo;</span> Prev
                    </a>
                  </li>
                  <% for (let i=1; i <=totalPages; i++) { %>
                    <li class="page-item <%= page == i ? 'active' : '' %>">
                      <a class="page-link" href="?<%= paginationQueryString %>&page=<%= i %>">
                        <%= i %>
                      </a>
                    </li>
                    <% } %>
                      <li class="page-item <%= page == totalPages ? 'disabled' : '' %>">
                        <a class="page-link" href="?<%= paginationQueryString %>&page=<%= page + 1 %>"
                          aria-label="Next">
                          Next <span aria-hidden="true">&raquo;</span>
                        </a>
                      </li>
                </ul>
              </nav>
            </div>
            <% } %>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Loading spinner modal -->
<div class="modal fade" id="loadingModal" tabindex="-1" aria-hidden="true" data-bs-backdrop="static">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-body text-center p-4">
        <div class="spinner-border text-primary mb-3" role="status">
          <span class="visually-hidden">Loading...</span>
        </div>
        <h5>Generating Excel Report...</h5>
        <p class="text-muted">Please wait, this may take a moment.</p>
      </div>
    </div>
  </div>
</div>

<!-- Status Modal for Success/Error Messages -->
<div class="modal fade" id="statusModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="statusModalTitle">Report Status</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body" id="statusModalBody">
        <!-- Status message will be inserted here -->
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

<script>
  // Set max date for date inputs to today
  var today = new Date().toISOString().split('T')[0];
  document.getElementById('startDate').setAttribute('max', today);
  document.getElementById('endDate').setAttribute('max', today);

  // Ensure end date is not before start date
  document.getElementById('startDate').addEventListener('change', function () {
    document.getElementById('endDate').setAttribute('min', this.value);
  });

  // If end date is already set, make sure start date can't be after it
  const endDateInput = document.getElementById('endDate');
  if (endDateInput.value) {
    document.getElementById('startDate').setAttribute('max', endDateInput.value);
  }

  // Update end date min when page loads if start date is set
  window.addEventListener('DOMContentLoaded', function () {
    const startDateInput = document.getElementById('startDate');
    if (startDateInput.value) {
      document.getElementById('endDate').setAttribute('min', startDateInput.value);
    }
  });

  // Add this JavaScript to your page to handle the Excel download

document.addEventListener('DOMContentLoaded', function() {
  const exportButtons = document.querySelectorAll('a[href^="/admin/generateExcel"]');
  
  exportButtons.forEach(button => {
    button.addEventListener('click', function(e) {
      e.preventDefault();
      
      const url = this.getAttribute('href');
      
      // Show loading state
      const originalButtonContent = this.innerHTML;
      this.innerHTML = '<i class="material-icons opacity-10">hourglass_empty</i> Generating...';
      this.classList.add('disabled');
      
      // Make AJAX request
      fetch(url)
        .then(response => response.json())
        .then(data => {
          if (data.status === 'success') {
            // Reset button
            this.innerHTML = originalButtonContent;
            this.classList.remove('disabled');
            
            // Create a notification
            showNotification('success', 'Report generated successfully!');
            
            // Trigger download
            const downloadLink = document.createElement('a');
            downloadLink.href = data.data.downloadUrl;
            downloadLink.download = `${data.data.reportTitle}.xlsx`;
            document.body.appendChild(downloadLink);
            downloadLink.click();
            document.body.removeChild(downloadLink);
            
            // Display report summary
            const reportSummary = `
              Report: ${data.data.reportTitle}
              Orders: ${data.data.orderCount}
              Products: ${data.data.productCount}
              Total: â‚¹${data.data.totalAmount.toLocaleString()}
              ${data.data.totalDiscount > 0 ? 'Discount: â‚¹' + data.data.totalDiscount.toLocaleString() : ''}
            `;
            console.log(reportSummary);
          } else {
            // Reset button and show error
            this.innerHTML = originalButtonContent;
            this.classList.remove('disabled');
            showNotification('danger', 'Failed to generate report');
            console.error(data.message);
          }
        })
        .catch(error => {
          // Reset button and show error
          this.innerHTML = originalButtonContent;
          this.classList.remove('disabled');
          showNotification('danger', 'Error connecting to server');
          console.error('Error:', error);
        });
    });
  });
  
  // Helper function to show notifications
  function showNotification(type, message) {
    // Check if the notification system is already available
    if (window.showNotification) {
      window.showNotification(type, message);
      return;
    }
    
    // Create a simple notification if no system exists
    const notification = document.createElement('div');
    notification.className = `alert alert-${type} alert-dismissible fade show`;
    notification.style.position = 'fixed';
    notification.style.top = '20px';
    notification.style.right = '20px';
    notification.style.zIndex = '9999';
    notification.style.minWidth = '300px';
    
    notification.innerHTML = `
      ${message}
      <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    `;
    
    document.body.appendChild(notification);
    
    // Auto dismiss after 5 seconds
    setTimeout(() => {
      notification.classList.remove('show');
      setTimeout(() => document.body.removeChild(notification), 300);
    }, 5000);
    
    // Handle manual dismiss
    const closeButton = notification.querySelector('.btn-close');
    if (closeButton) {
      closeButton.addEventListener('click', () => {
        notification.classList.remove('show');
        setTimeout(() => document.body.removeChild(notification), 300);
      });
    }
  }
});

  // Simple notification function
  function showNotification(message, type) {
    // Create notification element
    const notification = document.createElement('div');
    notification.className = `alert alert-${type} alert-dismissible fade show`;
    notification.style.position = 'fixed';
    notification.style.top = '20px';
    notification.style.right = '20px';
    notification.style.zIndex = '1050';
    notification.style.minWidth = '300px';
    notification.style.boxShadow = '0 4px 8px rgba(0,0,0,0.1)';

    notification.innerHTML = `
      <span>${message}</span>
      <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    `;

    // Add to document
    document.body.appendChild(notification);

    // Auto dismiss after 5 seconds
    setTimeout(() => {
      notification.classList.remove('show');
      setTimeout(() => {
        document.body.removeChild(notification);
      }, 150);
    }, 5000);
    
    // Optional - also add to console for debugging
    console.log(`${type.toUpperCase()}: ${message}`);
  }
</script>